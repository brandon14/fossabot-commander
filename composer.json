{
    "name": "brandon14/fossabot-commander",
    "description": "Library to easily create Fossabot commands invokable via the Fossabot customapi implementation.",
    "keywords": [
        "library",
        "fossabot"
    ],
    "type": "library",
    "license": "MIT",
    "homepage": "https://github.com/brandon14/fossabot-commander",
    "support": {
        "issues": "https://github.com/brandon14/fossabot-commander/issues",
        "source": "https://github.com/brandon14/fossabot-commander",
        "email": "brandon14125@gmail.com"
    },
    "authors": [
        {
            "name": "Brandon Clothier",
            "email": "brandon14125@gmail.com",
            "homepage": "https://brandonclothier.me",
            "role": "Lead Developer"
        }
    ],
    "autoload": {
        "psr-4": {
            "Brandon14\\FossabotCommander\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Brandon14\\FossabotCommander\\Tests\\": "tests/"
        }
    },
    "require": {
        "php": "^7.4|^8.0",
        "ext-json": "*",
        "psr/http-client": "^1.0",
        "psr/http-factory": "^1.0",
        "psr/log": "^1.0|^2.0|^3.0",
        "symfony/polyfill-php80": "^1.0",
        "symfony/polyfill-php81": "^1.0"
    },
    "require-dev": {
        "comcast/php-legal-licenses": "^1.2",
        "friendsofphp/php-cs-fixer": "^3.35",
        "guzzlehttp/guzzle": "^7.8",
        "mockery/mockery": "^1.6",
        "neronmoon/scriptsdev": "^0.1.9",
        "nunomaduro/phpinsights": "^2.9",
        "pestphp/pest": "^1.23.1",
        "pestphp/pest-plugin-parallel": "^1.2",
        "phpmd/phpmd": "^2.14",
        "phpstan/phpstan": "^1.10",
        "roave/security-advisories": "dev-latest",
        "squizlabs/php_codesniffer": "^3.7",
        "symfony/thanks": "^1.2",
        "vimeo/psalm": "^5.15"
    },
    "suggest": {
        "guzzle/guzzle": "Provides PSR-7 and PSR-17 implementations."
    },
    "scripts": {
        "analyze:psalm": "psalm",
        "analyze:stats": "@composer run-script analyze:psalm -- --stats",
        "analyze:insights": "phpinsights",
        "analyze:phpstan": "phpstan analyse",
        "composer:validate": "@composer validate --no-check-all --strict",
        "lint:phpcs:check": "phpcs ./",
        "lint:phpcs:fix": "phpcbf ./",
        "lint:phpmd": "phpmd ./ text ./phpmd.xml.dist",
        "lint:php-cs-fixer:fix": [
            "@putenv PHP_CS_FIXER_IGNORE_ENV=1",
            "php-cs-fixer fix"
        ],
        "lint:php-cs-fixer:check": "@composer run-script lint:php-cs-fixer:fix -- --dry-run --verbose",
        "lint": [
            "@composer run-script lint:phpcs:check",
            "@composer run-script lint:php-cs-fixer:check",
            "@composer run-script lint:phpmd"
        ],
        "lint:fix": [
            "@composer run-script lint:phpcs:fix",
            "@composer run-script lint:php-cs-fixer:fix"
        ],
        "test:php": [
            "@putenv XDEBUG_MODE=coverage",
            "pest --coverage --min=95 --coverage-html ./coverage --coverage-clover ./coverage.xml --order-by random --cache-result"
        ],
        "test": [
            "@composer run-script composer:validate",
            "@composer check-platform-reqs --no-dev",
            "@composer run-script lint",
            "@composer run-script test:php"
        ],
        "licenses:generate": [
            "php-legal-licenses generate",
            "@php ./scripts/copy-license.php"
        ],
        "post-update-cmd": [
            "@composer run-script composer:validate"
        ],
        "post-install-cmd": [
            "@composer run-script composer:validate"
        ]
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.0-dev",
            "dev-main": "1.0-dev",
            "dev-latest": "1.0-dev"
        },
        "scripts-dev": {
            "post-update-cmd": [
                "@composer run-script licenses:generate"
            ],
            "post-install-cmd": [
                "@composer run-script licenses:generate"
            ]
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "config": {
        "allow-plugins": {
            "symfony/thanks": true,
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "pestphp/pest-plugin": true,
            "neronmoon/scriptsdev": true
        },
        "sort-packages": true
    }
}
